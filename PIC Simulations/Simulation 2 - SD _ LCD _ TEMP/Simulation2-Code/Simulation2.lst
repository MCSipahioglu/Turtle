;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/02/2021 05:17:18
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF00  	GOTO        1024
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x001C	0x0E53      	MOVLW       83
0x001E	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0024	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0026	0x0E24      	MOVLW       36
0x0028	0x6E0C      	MOVWF       R12, 0
0x002A	0x0EB5      	MOVLW       181
0x002C	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x002E	0x2E0D      	DECFSZ      R13, 1, 0
0x0030	0xD7FE      	BRA         L_Delay_5500us5
0x0032	0x2E0C      	DECFSZ      R12, 1, 0
0x0034	0xD7FC      	BRA         L_Delay_5500us5
0x0036	0x0000      	NOP
0x0038	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x003A	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x003C	0x0000      	NOP
0x003E	0x0000      	NOP
0x0040	0x0000      	NOP
0x0042	0x0000      	NOP
0x0044	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0046	0x0012      	RETURN      0
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0048	0xBE3D      	BTFSC       FARG_Lcd_Cmd_out_char, 7 
0x004A	0xD002      	BRA         L__Lcd_Cmd21
0x004C	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x004E	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0050	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0052	0xBC3D      	BTFSC       FARG_Lcd_Cmd_out_char, 6 
0x0054	0xD002      	BRA         L__Lcd_Cmd23
0x0056	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0058	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x005A	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x005C	0xBA3D      	BTFSC       FARG_Lcd_Cmd_out_char, 5 
0x005E	0xD002      	BRA         L__Lcd_Cmd25
0x0060	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0062	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0064	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0066	0xB83D      	BTFSC       FARG_Lcd_Cmd_out_char, 4 
0x0068	0xD002      	BRA         L__Lcd_Cmd27
0x006A	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x006C	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x006E	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0070	0xB030      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0072	0xD002      	BRA         L__Lcd_Cmd29
0x0074	0x8480      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0076	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0078	0x9480      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x007A	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x007C	0xDFDF      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x007E	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0080	0xB63D      	BTFSC       FARG_Lcd_Cmd_out_char, 3 
0x0082	0xD002      	BRA         L__Lcd_Cmd31
0x0084	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0086	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0088	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x008A	0xB43D      	BTFSC       FARG_Lcd_Cmd_out_char, 2 
0x008C	0xD002      	BRA         L__Lcd_Cmd33
0x008E	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0090	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0092	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0094	0xB23D      	BTFSC       FARG_Lcd_Cmd_out_char, 1 
0x0096	0xD002      	BRA         L__Lcd_Cmd35
0x0098	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x009A	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x009C	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x009E	0xB03D      	BTFSC       FARG_Lcd_Cmd_out_char, 0 
0x00A0	0xD002      	BRA         L__Lcd_Cmd37
0x00A2	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00A4	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00A6	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00A8	0xB030      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00AA	0xD002      	BRA         L__Lcd_Cmd39
0x00AC	0x8480      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00AE	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00B0	0x9480      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00B2	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00B4	0xDFC3      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00B6	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00B8	0xA030      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00BA	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00BC	0xDFB4      	RCALL       _Delay_5500us
0x00BE	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00C0	0xDFAD      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00C2	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x00C4	0x0E24      	MOVLW       36
0x00C6	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x00C8	0x2E0D      	DECFSZ      R13, 1, 0
0x00CA	0xD7FE      	BRA         L_Delay_22us1
0x00CC	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x00CE	0x0012      	RETURN      0
; end of _Delay_22us
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00D0	0x9030      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x00D2	0xF03DC03C  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x00D6	0xDFB8      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x00D8	0x8030      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x00DA	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x00DC	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x00DE	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x00E0	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x00E2	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x00E4	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x00E6	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x00EA	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x00EE	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x00F0	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x00F2	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x00F6	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x00FA	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x00FC	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x00FE	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0100	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0102	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0104	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0106	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0108	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x010A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x010C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x010E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0110	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0112	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0114	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0116	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0118	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x011A	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x011E	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0122	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0126	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x012A	0x0012      	RETURN      0
; end of _Mul_16X16_U
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x012C	0x9292      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x012E	0x9492      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x0130	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x0132	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x0134	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0136	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0138	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x013A	0x9480      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x013C	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x013E	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x0140	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x0142	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x0144	0xDF70      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0146	0xDF6F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0148	0xDF6E      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x014A	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x014C	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x014E	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x0150	0xDF75      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0152	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x0154	0xDF68      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0156	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0158	0xDF71      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x015A	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x015C	0xDF64      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x015E	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x0160	0xDF6D      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0162	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x0164	0xDF60      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0166	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0168	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x016A	0xDF68      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x016C	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x016E	0xDF5B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0170	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x0172	0xDF64      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0174	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x0176	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x0178	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x017A	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x017C	0xDF5F      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x017E	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0180	0xDF52      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0182	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x0184	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x0186	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x0188	0xDF59      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x018A	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x018C	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x018E	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0190	0xDF55      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0192	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0194	0xDF48      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0196	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0198	0xDF51      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x019A	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x019C	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x019E	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x01A0	0xDF4D      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x01A2	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x01A4	0xDF40      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x01A6	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x01A8	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x01AA	0xDF48      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x01AC	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x01AE	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x01B0	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x01B2	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x01B4	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x01B6	0x8280      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x01B8	0xDF41      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x01BA	0x9280      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x01BC	0xDF34      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x01BE	0x8030      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x01C0	0x0012      	RETURN      0
; end of _Lcd_Init
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x01C2	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x01C4	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x01C6	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x01C8	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x01CA	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x01CC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x01CE	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x01D0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x01D2	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x01D4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x01D6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x01D8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x01DA	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x01DC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x01DE	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x01E0	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x01E2	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x01E4	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x01E6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x01E8	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x01EA	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x01EC	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x01EE	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x01F0	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x01F2	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x01F4	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x01F6	0x0012      	RETURN      0
; end of _Div_16X16_U
_ADC_Init:
;__Lib_ADC_A_D.c,13 :: 		
;__Lib_ADC_A_D.c,14 :: 		
0x01F8	0x0EFF      	MOVLW       _ADC_Get_Sample
0x01FA	0x6E31      	MOVWF       _ADC_Get_Sample_Ptr 
0x01FC	0x0EFF      	MOVLW       hi_addr(_ADC_Get_Sample)
0x01FE	0x6E32      	MOVWF       _ADC_Get_Sample_Ptr+1 
0x0200	0x0EFF      	MOVLW       FARG_ADC_Get_Sample_channel
0x0202	0x6E33      	MOVWF       _ADC_Get_Sample_Ptr+2 
0x0204	0x0EFF      	MOVLW       hi_addr(FARG_ADC_Get_Sample_channel)
0x0206	0x6E34      	MOVWF       _ADC_Get_Sample_Ptr+3 
;__Lib_ADC_A_D.c,16 :: 		
0x0208	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,17 :: 		
0x020A	0x1C1D      	COMF        _vref_mask, 0 
0x020C	0x6E00      	MOVWF       R0 
0x020E	0x5000      	MOVF        R0, 0 
0x0210	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,18 :: 		
0x0212	0x0E07      	MOVLW       7
0x0214	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,19 :: 		
0x0216	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,20 :: 		
0x0218	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,21 :: 		
L_end_ADC_Init:
0x021A	0x0012      	RETURN      0
; end of _ADC_Init
_ADC_Read:
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,54 :: 		
0x021C	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,55 :: 		
0x021E	0x1C1D      	COMF        _vref_mask, 0 
0x0220	0x6E00      	MOVWF       R0 
0x0222	0x5000      	MOVF        R0, 0 
0x0224	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,56 :: 		
0x0226	0x0E07      	MOVLW       7
0x0228	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,57 :: 		
0x022A	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,58 :: 		
0x022C	0xF000C037  	MOVFF       FARG_ADC_Read_channel, R0
0x0230	0x3600      	RLCF        R0, 1 
0x0232	0x9000      	BCF         R0, 0 
0x0234	0x3600      	RLCF        R0, 1 
0x0236	0x9000      	BCF         R0, 0 
0x0238	0x5000      	MOVF        R0, 0 
0x023A	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,59 :: 		
0x023C	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,60 :: 		
0x023E	0xDF42      	RCALL       _Delay_22us
;__Lib_ADC_A_D.c,61 :: 		
0x0240	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,62 :: 		
L_ADC_Read2:
0x0242	0xA2C2      	BTFSS       ADCON0, 1 
0x0244	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,63 :: 		
0x0246	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,64 :: 		
0x0248	0xF001CFC4  	MOVFF       ADRESH, R1
0x024C	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,65 :: 		
0x024E	0x50C3      	MOVF        ADRESL, 0 
0x0250	0x1200      	IORWF       R0, 1 
0x0252	0x0E00      	MOVLW       0
0x0254	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,66 :: 		
0x0256	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,68 :: 		
;__Lib_ADC_A_D.c,69 :: 		
L_end_ADC_Read:
0x0258	0x0012      	RETURN      0
; end of _ADC_Read
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x025A	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x025C	0x0E80      	MOVLW       128
0x025E	0x6E37      	MOVWF       FARG_Lcd_Out_row 
0x0260	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0262	0x0EC0      	MOVLW       192
0x0264	0x6E37      	MOVWF       FARG_Lcd_Out_row 
0x0266	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0268	0x0E94      	MOVLW       148
0x026A	0x6E37      	MOVWF       FARG_Lcd_Out_row 
0x026C	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x026E	0x0ED4      	MOVLW       212
0x0270	0x6E37      	MOVWF       FARG_Lcd_Out_row 
0x0272	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0274	0x0E80      	MOVLW       128
0x0276	0x6E37      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x0278	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x027A	0x5037      	MOVF        FARG_Lcd_Out_row, 0 
0x027C	0x0A01      	XORLW       1
0x027E	0xE0EE      	BZ          L_Lcd_Out13
0x0280	0x5037      	MOVF        FARG_Lcd_Out_row, 0 
0x0282	0x0A02      	XORLW       2
0x0284	0xE0EE      	BZ          L_Lcd_Out14
0x0286	0x5037      	MOVF        FARG_Lcd_Out_row, 0 
0x0288	0x0A03      	XORLW       3
0x028A	0xE0EE      	BZ          L_Lcd_Out15
0x028C	0x5037      	MOVF        FARG_Lcd_Out_row, 0 
0x028E	0x0A04      	XORLW       4
0x0290	0xE0EE      	BZ          L_Lcd_Out16
0x0292	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0294	0x0438      	DECF        FARG_Lcd_Out_column, 0 
0x0296	0x6E00      	MOVWF       R0 
0x0298	0x5037      	MOVF        FARG_Lcd_Out_row, 0 
0x029A	0x2600      	ADDWF       R0, 1 
0x029C	0xF037C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x02A0	0xF03DC000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x02A4	0xDED1      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x02A6	0x9030      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x02A8	0x6A3B      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x02AA	0x503B      	MOVF        Lcd_Out_i_L0, 0 
0x02AC	0x2439      	ADDWF       FARG_Lcd_Out_text, 0 
0x02AE	0x6EE9      	MOVWF       FSR0L 
0x02B0	0x0E00      	MOVLW       0
0x02B2	0x203A      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x02B4	0x6EEA      	MOVWF       FSR0L+1 
0x02B6	0x52EE      	MOVF        POSTINC0, 1 
0x02B8	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x02BA	0x503B      	MOVF        Lcd_Out_i_L0, 0 
0x02BC	0x2439      	ADDWF       FARG_Lcd_Out_text, 0 
0x02BE	0x6EE9      	MOVWF       FSR0L 
0x02C0	0x0E00      	MOVLW       0
0x02C2	0x203A      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x02C4	0x6EEA      	MOVWF       FSR0L+1 
0x02C6	0xF03CCFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x02CA	0xDF02      	RCALL       _Lcd_Chr_CP
0x02CC	0x2A3B      	INCF        Lcd_Out_i_L0, 1 
0x02CE	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x02D0	0x8030      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x02D2	0x0012      	RETURN      0
; end of _Lcd_Out
_setup_Init:
;Simulation2.c,61 :: 		void setup_Init() {               //Setup_Init will initialize anything that requires initialization.
;Simulation2.c,62 :: 		ADCON0=0b00000001;           //ADC on for analog channel 0.
0x02D4	0x0E01      	MOVLW       1
0x02D6	0x6EC2      	MOVWF       ADCON0 
;Simulation2.c,63 :: 		ADCON1=0b00001110;           //VDD and GND are Analog reference. Only the 0th channel open. We should use the analog channels starting from AN0 since we can't turn for example AN5 on without turning AN0-4 on.
0x02D8	0x0E0E      	MOVLW       14
0x02DA	0x6EC1      	MOVWF       ADCON1 
;Simulation2.c,64 :: 		ADCON2=0b10000010;           //Right justified, slowest.
0x02DC	0x0E82      	MOVLW       130
0x02DE	0x6EC0      	MOVWF       ADCON2 
;Simulation2.c,75 :: 		ADC_Init();                  //Initialize Analog to Digital Conversion.
0x02E0	0xDF8B      	RCALL       _ADC_Init
;Simulation2.c,76 :: 		Lcd_Init();                  //Initializes LCD pins & LCD.
0x02E2	0xDF24      	RCALL       _Lcd_Init
;Simulation2.c,77 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);    //Turns the Cursor off.
0x02E4	0x0E0C      	MOVLW       12
0x02E6	0x6E3D      	MOVWF       FARG_Lcd_Cmd_out_char 
0x02E8	0xDEAF      	RCALL       _Lcd_Cmd
;Simulation2.c,78 :: 		Lcd_Cmd(_LCD_CLEAR);         //Clears the screen. (More commands can be looked up from the library.)
0x02EA	0x0E01      	MOVLW       1
0x02EC	0x6E3D      	MOVWF       FARG_Lcd_Cmd_out_char 
0x02EE	0xDEAC      	RCALL       _Lcd_Cmd
;Simulation2.c,79 :: 		Lcd_Out(1,1,"Hello");
0x02F0	0x0E01      	MOVLW       1
0x02F2	0x6E37      	MOVWF       FARG_Lcd_Out_row 
0x02F4	0x0E01      	MOVLW       1
0x02F6	0x6E38      	MOVWF       FARG_Lcd_Out_column 
0x02F8	0x0E15      	MOVLW       ?lstr1_Simulation2
0x02FA	0x6E39      	MOVWF       FARG_Lcd_Out_text 
0x02FC	0x0E00      	MOVLW       hi_addr(?lstr1_Simulation2)
0x02FE	0x6E3A      	MOVWF       FARG_Lcd_Out_text+1 
0x0300	0xDFAC      	RCALL       _Lcd_Out
;Simulation2.c,80 :: 		Delay_ms(1000);
0x0302	0x0E1A      	MOVLW       26
0x0304	0x6E0B      	MOVWF       R11, 0
0x0306	0x0E5E      	MOVLW       94
0x0308	0x6E0C      	MOVWF       R12, 0
0x030A	0x0E6E      	MOVLW       110
0x030C	0x6E0D      	MOVWF       R13, 0
L_setup_Init0:
0x030E	0x2E0D      	DECFSZ      R13, 1, 0
0x0310	0xD7FE      	BRA         L_setup_Init0
0x0312	0x2E0C      	DECFSZ      R12, 1, 0
0x0314	0xD7FC      	BRA         L_setup_Init0
0x0316	0x2E0B      	DECFSZ      R11, 1, 0
0x0318	0xD7FA      	BRA         L_setup_Init0
0x031A	0x0000      	NOP
;Simulation2.c,81 :: 		}
L_end_setup_Init:
0x031C	0x0012      	RETURN      0
; end of _setup_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x031E	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0320	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0324	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0326	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0328	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x032A	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x032C	0x0012      	RETURN      0
; end of ___CC2DW
_temp_lcd_demo:
;Simulation2.c,93 :: 		void temp_lcd_demo(){
;Simulation2.c,94 :: 		if(i>j){
0x032E	0x0E80      	MOVLW       128
0x0330	0x181F      	XORWF       _j+1, 0 
0x0332	0x6E00      	MOVWF       R0 
0x0334	0x0E80      	MOVLW       128
0x0336	0x181C      	XORWF       _i+1, 0 
0x0338	0x5C00      	SUBWF       R0, 0 
0x033A	0xE102      	BNZ         L__temp_lcd_demo12
0x033C	0x501B      	MOVF        _i, 0 
0x033E	0x5C1E      	SUBWF       _j, 0 
L__temp_lcd_demo12:
0x0340	0xE208      	BC          L_temp_lcd_demo1
;Simulation2.c,95 :: 		Lcd_Init();       //When the SWITCH is off i goes 1 up. When the SWITCH goes back on this void initiates, LCD must be reinitialized to work.
0x0342	0xDEF4      	RCALL       _Lcd_Init
;Simulation2.c,96 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);    //Reinitialize the LCD and equate i to j. When the SWITCH goes back off i can go up 1 more. And we can reinitialize again in this if.
0x0344	0x0E0C      	MOVLW       12
0x0346	0x6E3D      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0348	0xDE7F      	RCALL       _Lcd_Cmd
;Simulation2.c,97 :: 		i=j;
0x034A	0xF01BC01E  	MOVFF       _j, _i
0x034E	0xF01CC01F  	MOVFF       _j+1, _i+1
;Simulation2.c,98 :: 		}
L_temp_lcd_demo1:
;Simulation2.c,100 :: 		temp = (ADC_Read(0))*500/1023;      //Read Temperature from ADC
0x0352	0x6A37      	CLRF        FARG_ADC_Read_channel 
0x0354	0xDF63      	RCALL       _ADC_Read
0x0356	0x0EF4      	MOVLW       244
0x0358	0x6E04      	MOVWF       R4 
0x035A	0x0E01      	MOVLW       1
0x035C	0x6E05      	MOVWF       R5 
0x035E	0xDEBE      	RCALL       _Mul_16X16_U
0x0360	0x0EFF      	MOVLW       255
0x0362	0x6E04      	MOVWF       R4 
0x0364	0x0E03      	MOVLW       3
0x0366	0x6E05      	MOVWF       R5 
0x0368	0xDF2C      	RCALL       _Div_16X16_U
0x036A	0xF035C000  	MOVFF       R0, _temp
0x036E	0xF036C001  	MOVFF       R1, _temp+1
;Simulation2.c,101 :: 		lcd_out(1, 1, "Temperature:");
0x0372	0x0E01      	MOVLW       1
0x0374	0x6E37      	MOVWF       FARG_Lcd_Out_row 
0x0376	0x0E01      	MOVLW       1
0x0378	0x6E38      	MOVWF       FARG_Lcd_Out_column 
0x037A	0x0E23      	MOVLW       ?lstr2_Simulation2
0x037C	0x6E39      	MOVWF       FARG_Lcd_Out_text 
0x037E	0x0E00      	MOVLW       hi_addr(?lstr2_Simulation2)
0x0380	0x6E3A      	MOVWF       FARG_Lcd_Out_text+1 
0x0382	0xDF6B      	RCALL       _Lcd_Out
;Simulation2.c,102 :: 		Temperature[0]='0'+ (temp/10)% 10;  //Tens of the temperature
0x0384	0x0E0A      	MOVLW       10
0x0386	0x6E04      	MOVWF       R4 
0x0388	0x0E00      	MOVLW       0
0x038A	0x6E05      	MOVWF       R5 
0x038C	0xF000C035  	MOVFF       _temp, R0
0x0390	0xF001C036  	MOVFF       _temp+1, R1
0x0394	0xDF16      	RCALL       _Div_16X16_U
0x0396	0x0E0A      	MOVLW       10
0x0398	0x6E04      	MOVWF       R4 
0x039A	0x0E00      	MOVLW       0
0x039C	0x6E05      	MOVWF       R5 
0x039E	0xDF11      	RCALL       _Div_16X16_U
0x03A0	0xF000C008  	MOVFF       R8, R0
0x03A4	0xF001C009  	MOVFF       R9, R1
0x03A8	0x5000      	MOVF        R0, 0 
0x03AA	0x0F30      	ADDLW       48
0x03AC	0x6E20      	MOVWF       _Temperature 
;Simulation2.c,103 :: 		Temperature[1]='0'+ temp%10;  //Ones of the temperature
0x03AE	0x0E0A      	MOVLW       10
0x03B0	0x6E04      	MOVWF       R4 
0x03B2	0x0E00      	MOVLW       0
0x03B4	0x6E05      	MOVWF       R5 
0x03B6	0xF000C035  	MOVFF       _temp, R0
0x03BA	0xF001C036  	MOVFF       _temp+1, R1
0x03BE	0xDF01      	RCALL       _Div_16X16_U
0x03C0	0xF000C008  	MOVFF       R8, R0
0x03C4	0xF001C009  	MOVFF       R9, R1
0x03C8	0x5000      	MOVF        R0, 0 
0x03CA	0x0F30      	ADDLW       48
0x03CC	0x6E21      	MOVWF       _Temperature+1 
;Simulation2.c,104 :: 		Lcd_out(2,1, Temperature);
0x03CE	0x0E02      	MOVLW       2
0x03D0	0x6E37      	MOVWF       FARG_Lcd_Out_row 
0x03D2	0x0E01      	MOVLW       1
0x03D4	0x6E38      	MOVWF       FARG_Lcd_Out_column 
0x03D6	0x0E20      	MOVLW       _Temperature
0x03D8	0x6E39      	MOVWF       FARG_Lcd_Out_text 
0x03DA	0x0E00      	MOVLW       hi_addr(_Temperature)
0x03DC	0x6E3A      	MOVWF       FARG_Lcd_Out_text+1 
0x03DE	0xDF3D      	RCALL       _Lcd_Out
;Simulation2.c,105 :: 		Delay_ms(1000);
0x03E0	0x0E1A      	MOVLW       26
0x03E2	0x6E0B      	MOVWF       R11, 0
0x03E4	0x0E5E      	MOVLW       94
0x03E6	0x6E0C      	MOVWF       R12, 0
0x03E8	0x0E6E      	MOVLW       110
0x03EA	0x6E0D      	MOVWF       R13, 0
L_temp_lcd_demo2:
0x03EC	0x2E0D      	DECFSZ      R13, 1, 0
0x03EE	0xD7FE      	BRA         L_temp_lcd_demo2
0x03F0	0x2E0C      	DECFSZ      R12, 1, 0
0x03F2	0xD7FC      	BRA         L_temp_lcd_demo2
0x03F4	0x2E0B      	DECFSZ      R11, 1, 0
0x03F6	0xD7FA      	BRA         L_temp_lcd_demo2
0x03F8	0x0000      	NOP
;Simulation2.c,106 :: 		}
L_end_temp_lcd_demo:
0x03FA	0x0012      	RETURN      0
; end of _temp_lcd_demo
_setup_IO:
;Simulation2.c,57 :: 		void setup_IO() {                 //Setup_IO will assign input and output pins. (Output 0, Input 1)
;Simulation2.c,58 :: 		SWITCH_TRIS=1;               //INPUTS
0x03FC	0x8892      	BSF         TRISA4_bit, BitPos(TRISA4_bit+0) 
;Simulation2.c,59 :: 		}
L_end_setup_IO:
0x03FE	0x0012      	RETURN      0
; end of _setup_IO
_main:
0x0400	0xF002EC23  	CALL        1094, 0
;Simulation2.c,111 :: 		void main() {
;Simulation2.c,113 :: 		setup_Init();
0x0404	0xDF67      	RCALL       _setup_Init
;Simulation2.c,114 :: 		setup_IO(); //IO setup must be done after initialization, since the proper digital/analog initialization of the ADCON register is needed before assigning a digital input characteristic to the SWITCH. (Program doesn't work if setup_IO is above setup_Init)
0x0406	0xDFFA      	RCALL       _setup_IO
;Simulation2.c,115 :: 		while(1){
L_main3:
;Simulation2.c,116 :: 		if (SWITCH==0){         //We won't be using the SWITCH for debugging, rather we will demonstrate that we can use the SWITCH by turning off the LCD with it.
0x0408	0xB880      	BTFSC       RA4_bit, BitPos(RA4_bit+0) 
0x040A	0xD00C      	BRA         L_main5
;Simulation2.c,117 :: 		Lcd_cmd(_LCD_TURN_OFF);
0x040C	0x0E08      	MOVLW       8
0x040E	0x6E3D      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0410	0xDE1B      	RCALL       _Lcd_Cmd
;Simulation2.c,118 :: 		if(i==j)  //Make i go 1 up when the SWITCH is off.
0x0412	0x501C      	MOVF        _i+1, 0 
0x0414	0x181F      	XORWF       _j+1, 0 
0x0416	0xE102      	BNZ         L__main14
0x0418	0x501E      	MOVF        _j, 0 
0x041A	0x181B      	XORWF       _i, 0 
L__main14:
0x041C	0xE102      	BNZ         L_main6
;Simulation2.c,119 :: 		i++;
0x041E	0x4A1B      	INFSNZ      _i, 1 
0x0420	0x2A1C      	INCF        _i+1, 1 
L_main6:
;Simulation2.c,120 :: 		}
0x0422	0xD001      	BRA         L_main7
L_main5:
;Simulation2.c,122 :: 		temp_lcd_demo();
0x0424	0xDF84      	RCALL       _temp_lcd_demo
L_main7:
;Simulation2.c,126 :: 		}
0x0426	0xD7F0      	BRA         L_main3
;Simulation2.c,127 :: 		}
L_end_main:
0x0428	0xD7FF      	BRA         $+0
; end of _main
0x0446	0xF015EE10  	LFSR        1, 21
0x044A	0x0E1B      	MOVLW       27
0x044C	0x6E00      	MOVWF       R0 
0x044E	0x0E01      	MOVLW       1
0x0450	0x6E01      	MOVWF       R1 
0x0452	0x0E2A      	MOVLW       42
0x0454	0x6EF6      	MOVWF       4086 
0x0456	0x0E04      	MOVLW       4
0x0458	0x6EF7      	MOVWF       TBLPTRH 
0x045A	0x0E00      	MOVLW       0
0x045C	0x6EF8      	MOVWF       TBLPTRU 
0x045E	0xF001EC8F  	CALL        798, 0
0x0462	0x0012      	RETURN      0
;Simulation2.c,0 :: ?ICS?lstr1_Simulation2
0x042A	0x6548 ;?ICS?lstr1_Simulation2+0
0x042C	0x6C6C ;?ICS?lstr1_Simulation2+2
0x042E	0x006F ;?ICS?lstr1_Simulation2+4
; end of ?ICS?lstr1_Simulation2
;Simulation2.c,0 :: ?ICS_i
0x0430	0x0000 ;?ICS_i+0
; end of ?ICS_i
;__Lib_ADC_A_D.c,0 :: ?ICS_vref_mask
0x0432	0x30 ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
;Simulation2.c,0 :: ?ICS_j
0x0433	0x0000 ;?ICS_j+0
; end of ?ICS_j
;Simulation2.c,0 :: ?ICS_Temperature
0x0435	0x3030 ;?ICS_Temperature+0
0x0437	0x00 ;?ICS_Temperature+2
; end of ?ICS_Temperature
;Simulation2.c,0 :: ?ICS?lstr2_Simulation2
0x0438	0x6554 ;?ICS?lstr2_Simulation2+0
0x043A	0x706D ;?ICS?lstr2_Simulation2+2
0x043C	0x7265 ;?ICS?lstr2_Simulation2+4
0x043E	0x7461 ;?ICS?lstr2_Simulation2+6
0x0440	0x7275 ;?ICS?lstr2_Simulation2+8
0x0442	0x3A65 ;?ICS?lstr2_Simulation2+10
0x0444	0x00 ;?ICS?lstr2_Simulation2+12
; end of ?ICS?lstr2_Simulation2
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [10]    _Delay_50us
0x0026      [22]    _Delay_5500us
0x003C      [12]    _Delay_1us
0x0048     [124]    _Lcd_Cmd
0x00C4      [12]    _Delay_22us
0x00D0      [12]    _Lcd_Chr_CP
0x00DC      [80]    _Mul_16X16_U
0x012C     [150]    _Lcd_Init
0x01C2      [54]    _Div_16X16_U
0x01F8      [36]    _ADC_Init
0x021C      [62]    _ADC_Read
0x025A     [122]    _Lcd_Out
0x02D4      [74]    _setup_Init
0x031E      [16]    ___CC2DW
0x032E     [206]    _temp_lcd_demo
0x03FC       [4]    _setup_IO
0x0400      [42]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    R1
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    R2
0x0003       [1]    R3
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0004       [1]    R4
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [6]    ?lstr1_Simulation2
0x001B       [2]    _i
0x001D       [1]    _vref_mask
0x001E       [2]    _j
0x0020       [3]    _Temperature
0x0023      [13]    ?lstr2_Simulation2
0x0030       [0]    __Lib_Lcd_cmd_status
0x0031       [4]    _ADC_Get_Sample_Ptr
0x0035       [2]    _temp
0x0037       [1]    FARG_ADC_Read_channel
0x0037       [1]    FARG_Lcd_Out_row
0x0038       [1]    FARG_Lcd_Out_column
0x0039       [2]    FARG_Lcd_Out_text
0x003B       [1]    Lcd_Out_i_L0
0x003C       [1]    FARG_Lcd_Chr_CP_out_char
0x003D       [1]    FARG_Lcd_Cmd_out_char
0x0F80       [0]    LCD_EN
0x0F80       [0]    LCD_RS
0x0F80       [0]    SWITCH
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA2_bit
0x0F83       [0]    LCD_D6
0x0F83       [0]    LCD_D4
0x0F83       [0]    LCD_D5
0x0F83       [0]    LCD_D7
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD7_bit
0x0F89       [0]    LATA5_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    LCD_EN_Direction
0x0F92       [0]    LCD_RS_Direction
0x0F92       [0]    SWITCH_TRIS
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    LCD_D7_Direction
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    LCD_D6_Direction
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x042A       [6]    ?ICS?lstr1_Simulation2
0x0430       [2]    ?ICS_i
0x0432       [1]    ?ICS_vref_mask
0x0433       [2]    ?ICS_j
0x0435       [3]    ?ICS_Temperature
0x0438      [13]    ?ICS?lstr2_Simulation2
